[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "dartfx-dataverse"
dynamic = ["version"]
description = "A Python toolkit for interacting with Dataverse repositories"
readme = "README.md"
requires-python = ">=3.12"
license = "MIT"
keywords = ["dataverse", "research-data", "data-repository", "metadata"]
authors = [
  { name = "kulnor", email = "pascal.heus@gmail.com" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
  "Intended Audience :: Developers",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Topic :: Scientific/Engineering :: Information Analysis",
]
dependencies = [
  "pydantic>=2.0.0",
  "requests>=2.31.0",
  "requests-cache>=1.0.0",
]

[project.optional-dependencies]
dev = [
  "coverage[toml]>=6.5",
  "pytest>=7.0",
  "mypy>=1.0.0",
  "ruff>=0.1.0",
]
docs = [
  "sphinx>=7.0",
  "sphinx-rtd-theme>=2.0",
]

[project.urls]
Documentation = "https://github.com/DataArtifex/dataverse-toolkit#readme"
Issues = "https://github.com/DataArtifex/dataverse-toolkit/issues"
Source = "https://github.com/DataArtifex/dataverse-toolkit"


[tool.hatch.build.targets.sdist]
exclude = [
  "/.github",
  "/docs",
]

[tool.hatch.build.targets.wheel]
packages = ["src/dartfx"]

[tool.hatch.version]
path = "src/dartfx/dataverse/__about__.py"

[tool.hatch.envs.default]
dependencies = [
  "coverage[toml]>=6.5",
  "pytest",
]
[tool.hatch.envs.default.scripts]
test = "pytest {args:tests}"
test-cov = "coverage run -m pytest {args:tests}"
cov-report = [
  "- coverage combine",
  "coverage report",
]
cov = [
  "test-cov",
  "cov-report",
]

[[tool.hatch.envs.all.matrix]]
python = ["3.12", "3.13"]

[tool.hatch.envs.types]
dependencies = [
  "mypy>=1.0.0",
]
[tool.hatch.envs.types.scripts]
check = "mypy --install-types --non-interactive {args:src/dartfx/dataverse tests}"

[tool.hatch.envs.docs]
dependencies = [
  "sphinx>=7.0",
  "sphinx-rtd-theme>=2.0",
]
[tool.hatch.envs.docs.scripts]
build = "sphinx-build -b html docs/source docs/build/html"
clean = "rm -rf docs/build"
serve = "python -m http.server --directory docs/build/html 8000"

[tool.coverage.run]
source_pkgs = ["dataverse", "tests"]
branch = true
parallel = true
omit = [
  "src/dartfx/dataverse/__about__.py",
]

[tool.coverage.paths]
source = ["src/dartfx/dataverse", "*/dataverse-toolkit/src/dartfx/dataverse"]
tests = ["tests", "*/dartfx/dataverse/tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

[tool.pytest.ini_options]
pythonpath = "src"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
  "--strict-markers",
  "--strict-config",
  "-ra",
]

[tool.ruff]
target-version = "py312"
line-length = 100
src = ["src", "tests"]

[tool.ruff.lint]
select = [
  "E",   # pycodestyle errors
  "W",   # pycodestyle warnings
  "F",   # pyflakes
  "I",   # isort
  "N",   # pep8-naming
  "UP",  # pyupgrade
  "B",   # flake8-bugbear
  "C4",  # flake8-comprehensions
  "DTZ", # flake8-datetimez
  "T10", # flake8-debugger
  "ICN", # flake8-import-conventions
  "PIE", # flake8-pie
  "PYI", # flake8-pyi
  "PT",  # flake8-pytest-style
  "RET", # flake8-return
  "SIM", # flake8-simplify
  "TID", # flake8-tidy-imports
  "ARG", # flake8-unused-arguments
  "PTH", # flake8-use-pathlib
  "ERA", # eradicate
  "PL",  # pylint
  "RUF", # ruff-specific rules
]
ignore = [
  "E501",   # line too long (handled by formatter)
  "PLR0913", # too many arguments
  "PLR2004", # magic value comparison
]

[tool.ruff.lint.per-file-ignores]
"tests/**/*" = ["PLR2004", "S101", "ARG"]

[tool.ruff.lint.isort]
known-first-party = ["dartfx"]

[tool.mypy]
python_version = "3.12"
strict = true
warn_unreachable = true
pretty = true
show_error_codes = true
show_error_context = true
